
./Catamorphisms.hs,279
module Catamorphisms Catamorphisms1,2
type StepAlgebra StepAlgebra3,4
type StepAlgebra b b3,4
data Nat Nat4,5
data Nat = Zero Zero4,5
data Nat = Zero | Succ Succ4,5
foldSteps foldSteps6,7
foldSteps foldSteps7,8
type Algebra Algebra13,14
type Algebra f f13,14

./ConstructingApplicativeFunctors.hs,76
module ConstructingApplicativeFunctors ConstructingApplicativeFunctors4,5

./Setup.hs,15
main main2,3

./src/AvoidPartialFns.hs,44
module AvoidPartialFns AvoidPartialFns1,2

./src/Cis194.hs,804
module Cis194 Cis1942,3
gt100 gt1004,5
gt100 gt1005,6
greaterThan100 greaterThan1007,8
greaterThan100 greaterThan1008,9
greaterThan100_2 greaterThan100_210,11
greaterThan100_2 greaterThan100_211,12
greaterThan100_3 greaterThan100_313,14
greaterThan100_3 greaterThan100_314,15
myTest myTest16,17
myTest myTest17,18
myTest' myTest'19,20
myTest' myTest'20,21
foobar foobar22,23
foobar foobar23,24
foobar' foobar'28,29
foobar' foobar'29,30
length' length'31,32
length' length'32,33
class Listable Listable36,37
class Listable Listable36,37
  toList toList37,38
instance instance39,40
data Tree Tree50,51
data Tree a = Empty Empty50,51
data Tree a = Empty | Node Node50,51
sumL sumL56,57
foo foo58,59
f1 f165,66
f1 f166,67
f2 f268,69
f2 f269,70

./src/DataKinds.hs,0

./src/DataTypeable.hs,264
module DataTypeable DataTypeable5,6
data X X12,13
data X = X X12,13
data X = X { foo foo12,13
data X = X { foo :: Int, bar bar12,13
char char14,15
char char15,16
gshows gshows42,43
gshows gshows43,44
data Foo Foo68,69
data Foo = Foo Foo68,69

./src/DeclarationVsExpressionStyle.hs,174
module DeclarationVsExpressionStyle DeclarationVsExpressionStyle0,1
filterdec filterdec4,5
filterdec filterdec5,6
filterexp filterexp11,12
filterexp filterexp12,13

./src/DigestiveFunctors.hs,817
module Main Main2,3
data App App24,25
data App = AppApp24,25
    { _heist _heist25,26
instance instance30,31
type AppHandler AppHandler33,34
data Date Date39,40
data Date = DateDate39,40
    { dateDay dateDay40,41
    , dateMonth dateMonth41,42
    , dateYear dateYear42,43
dateForm dateForm45,46
dateForm dateForm46,47
data Sex Sex55,56
data Sex = Female Female55,56
data Sex = Female | MaleMale55,56
data User User58,59
data User = UserUser58,59
    { userName userName59,60
    , userPassword userPassword60,61
    , userSex userSex61,62
    , userBirthdate userBirthdate62,63
userForm userForm65,66
userForm userForm66,67
form form76,77
form form77,78
routes routes90,91
routes routes91,92
app app93,94
app app94,95
main main99,100
main main100,101

./src/ErrorHandling.hs,120
module ErrorHandling ErrorHandling1,2
myDiv1 myDiv16,7
myDiv1 myDiv17,8
myDiv2 myDiv211,12
myDiv2 myDiv212,13

./src/ExistentiallyQuantifiedTypes.hs,219
module ExistentiallyQuantifiedTypes ExistentiallyQuantifiedTypes3,4
newtype Pair Pair5,6
newtype Pair a b = Pair Pair5,6
newtype Pair a b = Pair {runPair runPair5,6
makePair makePair7,8
makePair makePair8,9

./src/experiments.hs,1008
module Experiments Experiments0,1
addThree addThree4,5
addThree addThree5,6
largestDivisible largestDivisible8,9
largestDivisible largestDivisible9,10
chain chain12,13
chain chain13,14
numLongChains numLongChains18,19
numLongChains numLongChains19,20
numLongChainsWithLambda numLongChainsWithLambda22,23
numLongChainsWithLambda numLongChainsWithLambda23,24
sum' sum'25,26
sum' sum'26,27
sum2' sum2'28,29
sum2' sum2'29,30
elem' elem'31,32
elem' elem'32,33
map' map'34,35
map' map'35,36
mapWithFoldl' mapWithFoldl'37,38
mapWithFoldl' mapWithFoldl'38,39
reverse' reverse'40,41
reverse' reverse'41,42
reverse2' reverse2'43,44
reverse2' reverse2'44,45
sqrtSums sqrtSums46,47
sqrtSums sqrtSums47,48
isInAny' isInAny'49,50
isInAny' isInAny'50,51
mem, mem' mem'52,53
mem,mem52,53
mem mem53,54
mem' mem'54,55
dot dot56,57
dot dot57,58
uppercase uppercase65,66
uppercase uppercase66,67
uppercase2 uppercase268,69
uppercase2 uppercase269,70

./src/ExploreFunctionsTuples.hs,425
module ExploreFunctionsTuples ExploreFunctionsTuples1,2
boring boring8,9
boring boring9,10
lessBoring lessBoring11,12
lessBoring lessBoring12,13
tupleMemberInsert1 tupleMemberInsert115,16
tupleMemberInsert1 tupleMemberInsert116,17
tupleMemberInsert2 tupleMemberInsert219,20
tupleMemberInsert2 tupleMemberInsert220,21
tupleMemberInsert3 tupleMemberInsert323,24
tupleMemberInsert3 tupleMemberInsert324,25

./src/Exploring.hs,86
module Exploring Exploring0,1
prob1_sol1 prob1_sol16,7
prob1_sol1 prob1_sol17,8

./src/fac.hs,35
module Test Test0,1
fac fac2,3

./src/fibonacci.hs,58
module Fibonacci Fibonacci0,1
fib fib2,3
fib fib3,4

./src/FingerTree.hs,108
data FingerTree FingerTree3,4
data FingerTree = EmptyEmpty3,4
  | Single Single4,5
  | Deep Deep5,6

./src/Fold.hs,22
module Fold Fold0,1

./src/LearnHeist.hs,34
module LearnHeist LearnHeist1,2

./src/learning/GhcBase.hs,85
module Learning.GhcBase Learning.GhcBase0,1
min min4,5
min min5,6
let let8,9

./src/learning/Monads.hs,76
module Monads Monads0,1
isBigGang isBigGang2,3
isBigGang isBigGang3,4

./src/learning/Monoid.hs,208
module Learning.Monoid Learning.Monoid0,1
newtype MyProduct MyProduct4,5
newtype MyProduct a = MyProduct MyProduct4,5
newtype MyProduct a = MyProduct { getProduct getProduct4,5
instance instance6,7

./src/learning/StateMonad.hs,101
module Learning.StateMonad Learning.StateMonad0,1
fact3 fact32,3
fact3 fact33,4
ex3 ex312,13

./src/learning/WriterMonad.hs,103
module Learning.WriterMonad Learning.WriterMonad0,1
fact1 fact17,8
fact1 fact18,9
ex2 ex218,19

./src/learning.hs,70
module Learning.L1 Learning.L10,1
mySum mySum2,3
mySum mySum3,4

./src/Length.hs,123
module Length Length0,1
len len5,6
len len6,7
len' len'9,10
len' len'10,11
len'' len''16,17
len'' len''17,18

./src/Lenses.hs,1290
module Lenses Lenses4,5
data Foo Foo12,13
data Foo a = Foo Foo12,13
data Foo a = Foo { _bar _bar12,13
data Foo a = Foo { _bar :: Int, _baz _baz12,13
data Foo a = Foo { _bar :: Int, _baz :: Int, _quux _quux12,13
fresh fresh16,17
fresh fresh17,18
data Game Game21,22
data Game = GameGame21,22
    { _score _score22,23
    , _units _units23,24
    , _boss _boss24,25
data Unit Unit27,28
data Unit = UnitUnit27,28
    { _health _health28,29
    , _position _position29,30
data Point Point32,33
data Point = PointPoint32,33
    { _x _x33,34
    , _y _y34,35
initialState initialState66,67
initialState initialState67,68
strike strike90,91
strike strike91,92
bossHP bossHP98,99
bossHP bossHP99,100
strike2 strike2101,102
strike2 strike2102,103
fireBreath fireBreath106,107
fireBreath fireBreath107,108
partyHP partyHP111,112
partyHP partyHP112,113
fireBreath2 fireBreath2114,115
fireBreath2 fireBreath2115,116
around around122,123
around around123,124
fireBreath3 fireBreath3129,130
fireBreath3 fireBreath3130,131
retreat retreat138,139
retreat retreat139,140
partyLoc partyLoc146,147
partyLoc partyLoc147,148
retreat2 retreat2149,150
retreat2 retreat2150,151
battle battle161,162
battle battle162,163

./src/Lifting.hs,28
module Lifting Lifting1,2

./src/Lists.hs,198
module Lists Lists2,3
myUnzip myUnzip11,12
myUnzip myUnzip12,13
unzipk unzipk18,19
unzipk unzipk19,20
dic dic25,26
myGroup myGroup28,29
myGroup myGroup29,30
myGroup2 myGroup231,32

./src/Main.hs,37
module Main Main1,2
main main4,5

./src/Maps.hs,22
module Maps Maps1,2

./src/MathProblem.hs,107
is_palindrome is_palindrome2,3
is_palindrome_rec is_palindrome_rec5,6
isPalindrome isPalindrome10,11

./src/Maybe.hs,24
module Maybe Maybe0,1

./src/MonadCont.hs,323
module MonadCont MonadCont0,1
calculateLength calculateLength5,6
calculateLength calculateLength6,7
lengthPrint lengthPrint8,9
double double11,12
double double12,13
doubleLengthPring doubleLengthPring14,15
validateName validateName18,19
whatsYourName whatsYourName21,22
whatsYourName whatsYourName22,23

./src/MonadMorphisms.hs,76
module MonadMorphisms MonadMorphisms2,3
type m m4,5
type m :-> :->4,5

./src/Monads.hs,40
module MonadsExample MonadsExample0,1

./src/MonadTransformers.hs,969
module MonadTransformers MonadTransformers1,2
data MaybeIO MaybeIO11,12
data MaybeIO a = MaybeIO MaybeIO11,12
data MaybeIO a = MaybeIO { runMaybeIO runMaybeIO11,12
instance instance13,14
data User User26,27
data User = User User26,27
findById findById28,29
findById findById29,30
smartFindUsers smartFindUsers32,33
smartFindUsers smartFindUsers33,34
transformerFindUsers transformerFindUsers40,41
transformerFindUsers transformerFindUsers41,42
getAnswer getAnswer48,49
getAnswer getAnswer49,50
display display55,56
display display56,57
getAnswer2 getAnswer267,68
getAnswer2 getAnswer268,69
display2 display274,75
display2 display275,76
display3 display383,84
display3 display384,85
getAnswer4 getAnswer493,94
getAnswer4 getAnswer494,95
fromMaybeT fromMaybeT97,98
fromMaybeT fromMaybeT98,99
display4 display4100,101
display4 display4101,102
sequen sequen109,110
sequen sequen110,111
chatbot chatbot125,126

./src/NaturalTransformation.hs,56
module NaturalTransformation NaturalTransformation2,3

./src/Operations.hs,34
module Operations Operations1,2

./src/PhantomTypes.hs,1649
module PhantomTypes PhantomTypes5,6
data FormData FormData9,10
data FormData a = FormData FormData9,10
changeType changeType11,12
changeType changeType12,13
data Validated Validated14,15
data Validated = Validated Validated14,15
data Unvalidated Unvalidated15,16
data Unvalidated = Unvalidated Unvalidated15,16
formData formData18,19
formData formData19,20
validate validate22,23
validate validate23,24
useData useData26,27
useData useData27,28
liftStringFn liftStringFn30,31
liftStringFn liftStringFn31,32
dataToUpper dataToUpper33,34
dataToUpper dataToUpper34,35
class Sanitise Sanitise37,38
class Sanitise Sanitise37,38
  sanitise sanitise38,39
instance instance40,41
newtype Distance Distance50,51
newtype Distance a = Distance Distance50,51
data KilometerKilometer51,52
data MileMile52,53
marathonDistance marathonDistance54,55
marathonDistance marathonDistance55,56
distanceKmToMilles distanceKmToMilles57,58
distanceKmToMilles distanceKmToMilles58,59
marathonDistanceInMiles marathonDistanceInMiles60,61
marathonDistanceInMiles marathonDistanceInMiles61,62
data LengthUnit LengthUnit64,65
data LengthUnit = Kilometer Kilometer64,65
data LengthUnit = Kilometer | MileMile64,65
newtype Distance2 Distance266,67
newtype Distance2 (a :: LengthUnit) = Distance2 Distance266,67
marathonDistance2 marathonDistance269,70
marathonDistance2 marathonDistance270,71
distanceKmToMilles2 distanceKmToMilles272,73
distanceKmToMilles2 distanceKmToMilles273,74
marathonDistanceInMiles2 marathonDistanceInMiles275,76
marathonDistanceInMiles2 marathonDistanceInMiles276,77

./src/PolykindFolds.hs,40
module PolykindFolds PolykindFolds3,4

./src/PracticeErrorReading.hs,475
module PracticeErrorReading PracticeErrorReading2,3
safeHead safeHead10,11
safeHead safeHead11,12
sortWrapper sortWrapper16,17
isEq isEq20,21
isEq isEq21,22
isEq2 isEq223,24
isEq2 isEq224,25
getFirstLetter getFirstLetter28,29
getFirstLetter getFirstLetter29,30
getFirstLetter2 getFirstLetter231,32
getFirstLetter2 getFirstLetter232,33
getFirstLetter3 getFirstLetter334,35
getFirstLetter3 getFirstLetter335,36
asInt asInt39,40
asInt asInt40,41

./src/Primes.hs,64
module Primes Primes0,1
primes primes2,3
primes primes3,4

./src/quickcheck/Examples.hs,75
module Quickcheck.Examples Quickcheck.Examples2,3
runTests runTests7,8

./src/Sampling.hs,60
module Sampling Sampling1,2
type R R7,8
type R a a7,8

./src/StateMonad.hs,433
module StateMonad StateMonad1,2
type Stack Stack10,11
pop pop12,13
pop pop13,14
push push15,16
push push16,17
swap swap18,19
swap swap19,20
dup dup24,25
dup dup25,26
drop drop29,30
drop drop30,31
changeStack changeStack34,35
changeStack changeStack35,36
data Seq Seq40,41
data Seq = Seq Seq40,41
instance instance42,43
nextSeq nextSeq51,52
nextSeq nextSeq52,53
next next58,59
next next59,60

./src/TemplateHaskell/TemplateHaskell.hs,593
module TemplateHaskell TemplateHaskell2,3
fibs fibs7,8
fibs fibs8,9
fibQ fibQ10,11
fibQ fibQ11,12
isPrime isPrime15,16
isPrime isPrime16,17
nextPrime nextPrime18,19
nextPrime nextPrime19,20
doPrime doPrime21,22
doPrime doPrime22,23
primeQ primeQ27,28
primeQ primeQ28,29
g g32,33
f1 f136,37
data Format Format47,48
data Format = D D47,48
data Format = D | S S47,48
data Format = D | S | L L47,48
tokenize tokenize51,52
tokenize tokenize52,53
args args59,60
args args60,61
body body66,67
body body67,68
printf printf78,79
printf printf79,80

./src/TemplateHaskell/TemplateHaskellSplices.hs,85
module TemplateHaskellSplices TemplateHaskellSplices2,3
explPrintf explPrintf6,7

./src/Types.hs,283
module Types Types0,1
type Point Point2,3
data Triangle Triangle3,4
data Triangle = Triangle Triangle3,4
data Square Square4,5
data Square = Square Square4,5
class Shape Shape6,7
class Shape Shape6,7
  rotate rotate7,8
  simple simple8,9
instance instance11,12

./src/Writer.hs,258
module Writer Writer3,4
fact1 fact17,8
fact1 fact18,9
fact2 fact219,20
fact2 fact220,21
fact4 fact430,31
fact4 fact431,32
fact5 fact540,41
fact5 fact541,42
tellFst tellFst54,55
tellSnd tellSnd57,58
fact6 fact659,60
fact6 fact660,61

./TypeLevelPgm.hs,208
module TypeLevelPgm TypeLevelPgm4,5
data ZZ8,9
data S S9,10
class Plus Plus14,15
type family family19,20
type instance instance20,21
type instance Plus2 Plus220,21
type instance instance21,22
